// Generated by CoffeeScript 1.6.3
(function() {
  var Mainframe, spawn;

  spawn = require('child_process').spawn;

  Mainframe = (function() {
    function Mainframe() {
      ({
        echo: function(data) {
          return console.log(data);
        }
      });
    }

    Mainframe.prototype.setup = function() {
      return console.log('entering setup mode...');
    };

    Mainframe.prototype.update = function() {
      var child;
      child = spawn('sudo', ['apt-get', 'update', '-y']);
      child.stdout.on('data', function(data) {
        return echo(data.toString().trim());
      });
      return child.stderr.on('data', function(data) {
        return echo(data.toString().trim());
      });
    };

    Mainframe.prototype.upgrade = function() {
      var child;
      child = spawn('sudo', ['apt-get', 'upgrade', '-y']);
      child.stdout.on('data', function(data) {
        return echo(data.toString().trim());
      });
      return child.stderr.on('data', function(data) {
        return echo(data.toString().trim());
      });
    };

    Mainframe.prototype.reboot = function() {
      var child;
      child = spawn('sudo', ['reboot']);
      child.stdout.on('data', function(data) {
        return echo(data.toString().trim());
      });
      return child.stderr.on('data', function(data) {
        return echo(data.toString().trim());
      });
    };

    Mainframe.prototype.memory = function() {
      var child;
      child = spawn('free', ['-m']);
      child.stdout.on('data', function(data) {
        return echo(data.toString().trim());
      });
      return child.stderr.on('data', function(data) {
        return echo(data.toString().trim());
      });
    };

    Mainframe.prototype.setHostname = function(newHostName) {
      return console.log("setting host to " + newHostName);
    };

    Mainframe.prototype.addClientSshKey = key;

    Mainframe.prototype.createGitRepo = function(repoName) {};

    Mainframe.prototype.createNginxSiteRecord = function(siteName) {};

    Mainframe.prototype.restartNginx = function() {};

    showRunningForeverApps(function() {});

    backupServer(function() {});

    createMongoDb(function(dbName) {});

    addMongoUser(function(username) {});

    return Mainframe;

  })();

  module.exports = Mainframe;

}).call(this);
